
- name: Create docker volumes
  command: 'docker volume create --name={{ item }}'
  with_items:
    - ols-mongo-data
    - ols-solr-data

- name: Run docker-compose up solr mongo
  command: 'docker-compose up -d solr mongo'
  args:
    chdir: '{{ backend_ols_base_dir }}'

- name: Build ols-config-importer
  command: 'docker build -f ols-apps/ols-config-importer/Dockerfile -t ols-config-importer .'
  args:
    chdir: '{{ backend_ols_base_dir }}'

- name: Run ols-config-importer
  command: 'docker run --net=host -v {{ backend_ols_base_dir }}/config:/config ols-config-importer'
  args:
    chdir: '{{ backend_ols_base_dir }}'

- name: Build ols-indexer
  command: 'docker build -f ols-apps/ols-indexer/Dockerfile -t ols-indexer .'
  args:
    chdir: '{{ backend_ols_base_dir }}'
  ignore_errors: yes

- name: Run ols-indexer into actual neo4j and downloads directories
  command: 'docker run --net=host -v {{ ansible_env.HOME }}/ts-neo4j-data:/mnt/neo4j -v {{ ansible_env.HOME }}/ts-downloads:/mnt/downloads ols-indexer'
  args:
    chdir: '{{ backend_ols_base_dir }}'
  ignore_errors: yes
  async: 60
  poll: 0
  register: indexer_sleeper

- name: 'check on ols-indexer task'
  async_status:
    jid: '{{ indexer_sleeper.ansible_job_id }}'
  register: job_result
  until: job_result.finished
  retries: '{{ backend_indexer_retries }}'
  delay: 60

- name: Grant full permissions to neo4j data
  become: yes
  shell: chmod 777 -R {{ ansible_env.HOME }}/ts-neo4j-data/

- name: Grant full permissions to downloads data
  become: yes
  shell: chmod 777 -R {{ ansible_env.HOME }}/ts-downloads/

- name: Run docker-compose up -d ols-web
  command: 'docker-compose up -d ols-web'
  args:
    chdir: '{{ backend_ols_base_dir }}'
  environment:
        LOGO: '{{ backend_logo }}'
        TITLE: '{{ backend_title }}'
        SHORT_TITLE: '{{ backend_short_title }}'
        WEB: '{{ backend_web }}'
        TWITTER: '{{ backend_twitter }}'
        ORG: '{{ backend_org }}'
        BACKGROUND_IMAGE: '{{ backend_background_image }}'
        BACKGROUND_COLOR: '{{ backend_background_color }}'
        ISSUES_PAGE: '{{ backend_issues_page }}'
        SUPPORT_MAIL: '{{ backend_support_mail }}'
